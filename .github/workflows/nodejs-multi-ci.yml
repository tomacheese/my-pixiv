# 複数のディレクトリにある Node.js でビルド・テストを実行する。バージョンは .node-version に記載されているものを利用する

name: Node CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  node-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [view, api]
      fail-fast: false

    steps:
      - name: 🛎 Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: 🏗 Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ${{ matrix.directory }}/.node-version
          cache: yarn
          cache-dependency-path: ${{ matrix.directory }}/yarn.lock

      - name: 📃 Check package.json definition
        id: package-json
        working-directory: ${{ matrix.directory }}
        run: |
          compile=$(jq '.scripts | has("compile")' package.json)
          build=$(jq '.scripts | has("build")' package.json)
          generate=$(jq '.scripts | has("generate")' package.json)
          package=$(jq '.scripts | has("package")' package.json)
          lint=$(jq '.scripts | has("lint")' package.json)
          test=$(jq '.scripts | has("test")' package.json)

          echo "compile: $compile"
          echo "build: $build"
          echo "generate: $generate"
          echo "package: $package"
          echo "lint: $lint"
          echo "test: $test"

          echo "compile=$compile" >> $GITHUB_OUTPUT
          echo "build=$build" >> $GITHUB_OUTPUT
          echo "generate=$generate" >> $GITHUB_OUTPUT
          echo "package=$package" >> $GITHUB_OUTPUT
          echo "lint=$lint" >> $GITHUB_OUTPUT
          echo "test=$test" >> $GITHUB_OUTPUT

      - name: 👨🏻‍💻 Install dependencies
        working-directory: ${{ matrix.directory }}
        run: yarn install --frozen-lockfile

      - name: 👀 Run linter
        if: steps.package-json.outputs.lint == 'true'
        working-directory: ${{ matrix.directory }}
        run: yarn lint

      - name: 🎁 Run package
        if: steps.package-json.outputs.package == 'true'
        working-directory: ${{ matrix.directory }}
        run: yarn package

      - name: 🏃 Run compile
        if: steps.package-json.outputs.compile == 'true'
        working-directory: ${{ matrix.directory }}
        run: yarn compile

      - name: 🏗️ Run build & generate (Nuxt.js)
        if: steps.package-json.outputs.build == 'true' && steps.package-json.outputs.generate == 'true'
        working-directory: ${{ matrix.directory }}
        run: |
          yarn build
          yarn generate

      - name: 🧪 Run tests
        if: steps.package-json.outputs.test == 'true'
        working-directory: ${{ matrix.directory }}
        run: yarn test

      - name: Check exists dist directory
        id: check-dist
        working-directory: ${{ matrix.directory }}
        run: |
          echo "exists=$(test -d dist && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: 📦 Upload artifact
        if: steps.check-dist.outputs.exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.directory }}-dist
          path: ${{ matrix.directory }}/dist

  finished-node-ci:
    name: Check finished Node CI
    runs-on: ubuntu-latest
    needs:
      - node-ci

    steps:
      - name: Check finished Node CI
        run: echo ok